# Multi-stage build for production
FROM node:18-alpine AS builder

# Install OpenSSL for Prisma
RUN apk add --no-cache openssl

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install ALL dependencies (dev + prod pour le build)
RUN npm ci

# Copy source code and prisma schema
COPY src/ ./src/
COPY prisma/ ./prisma/

# Generate Prisma client
RUN npx prisma generate

# Build TypeScript
RUN npm run build

# l'image "Builder" sera JETÉE après compilation et on ne gardera que l'image "Production"
# Pour des problématiques de performance et de sécurité

# Taille :

# Sans multi-stage : ~300MB
# Avec multi-stage : ~101MB

# Sécurité :

# Pas de TypeScript compiler en production
# Pas de devDependencies
# Surface d'attaque réduite

# Performance :

# Image plus légère = déploiement plus rapide
# Moins de packages = démarrage plus rapide

# Le git SHA de la build peut être passé en argument pour le versioning
ARG GIT_SHA

# Production stage
FROM node:18-alpine AS production

# Install OpenSSL for Prisma
RUN apk add --no-cache openssl dumb-init

# Create non-root user
# Cette etape permet d'eviter d'executer le code avec les droits root
# Ce qui est une bonne pratique de securite
# On cree un utilisateur 'nextjs' avec un groupe 'nodejs'
# avec un UID et GID fixe (1001) pour eviter des problemes de permissions
# l'option -S permet de creer un utilisateur systeme
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

WORKDIR /app
ENV GIT_SHA=$GIT_SHA

# Create logs directory with proper permissions
RUN mkdir -p logs && chown nextjs:nodejs logs

# Copy package files and prisma schema
COPY package*.json ./
COPY --from=builder /app/prisma ./prisma

# Install only production dependencies
RUN npm ci --only=production

# Generate Prisma client in production stage
RUN npx prisma generate

# Copy built application from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/dist ./dist

# Switch to non-root user
USER nextjs

EXPOSE 3000

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/app.js"]