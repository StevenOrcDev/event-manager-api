generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  events Event[]

  @@map("users")
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  location    String?
  maxAttendees Int?
  status      EventStatus @default(DRAFT)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  organizerId String
  organizer   User   @relation(fields: [organizerId], references: [id], onDelete: Cascade)

  attendees EventAttendee[]

  @@map("events")
}

model EventAttendee {
  id       String           @id @default(cuid())
  userId   String
  eventId  String
  status   AttendeeStatus   @default(PENDING)
  joinedAt DateTime         @default(now())

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
  @@map("event_attendees")
}

enum UserRole {
  USER
  ADMIN
}

enum EventStatus {
  DRAFT
  PUBLISHED
  CANCELLED
  COMPLETED
}

enum AttendeeStatus {
  PENDING
  CONFIRMED
  DECLINED
}